import './CourseCompletion.scss';
import Sidebar from "../ProSidebar/Sidebar";
import cl from "classnames";
import React, {useEffect, useState} from "react";
import {
    getCourse,
    getCourseModules,
    getCourseAnnouncements,
    getModuleTasks,
    getModuleTests
} from "../../api/CoursesAPI";
import {taskTypes} from "../CourseProgram/CourseProgram";
import Module from "./Module/Module";
import Task from "./Task/Task";
import Test from "./Test/Test";
import Announcements from "./Announcement/Announcements";

export const completionStates = {
    module: 'module-completion',
    task: 'task-completion',
    announcements: 'announcement-completion',
}

function CourseCompletion({}) {
    const [state, setState] = useState(completionStates.module);
    const [taskType, setTaskType] = useState(null);
    const [courseId, setCourseId] = useState('');

    const [module, setOpenModule] = useState(null);
    const [test, setTest] = useState(null);
    const [task, setTask] = useState(null);

    const [modules, setModules] = useState([]);
    const [announcements, setAnnouncements] = useState([]);
    const [tasks, setTasks] = useState({});
    const [tests, setTests] = useState({});

    useEffect(async () => {
        let localStorageCourseID = localStorage.getItem('courseIdOpen');
        console.log('courseId', localStorageCourseID);

        if (localStorageCourseID !== 'undefined') {
            setCourseId(localStorageCourseID);
        }

        if (!courseId) {
            setDefaultData();
            return;
        }

        let modulesResponse = await getCourseModules(courseId);
        setModules(modulesResponse);
        console.log('modulesResponse', modulesResponse)

        if (modulesResponse.length) {
            setOpenModule(JSON.stringify(modulesResponse[0]));
        }

        let allTasks = {};
        let allTests = {};

        modulesResponse.forEach((async (module) => {
            let tasksResponse = await getModuleTasks(module.id);
            let testsResponse = await getModuleTests(module.id);

            allTasks[module.id] = tasksResponse;
            allTests[module.id] = testsResponse;
        }))

        setTasks(allTasks);
        setTests(allTests);

        let announcementsResponse = await getCourseAnnouncements(localStorageCourseID);
        setAnnouncements(announcementsResponse);

    }, [taskType, courseId]);

    function setDefaultData() {
        setModules([
            {
                "courseId": "6220a96e28160b846e6f3108",
                "id": "1",
                "name": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Node.js",
                "description": "Node.js ‚Äì —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ —Ä—ã–Ω–∫–µ —Ç—Ä—É–¥–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –≠—Ç–æ—Ç –∫—É—Ä—Å –ø—Ä–æ–≤–µ–¥–µ—Ç –≤–∞—Å –æ—Ç –∏–∑—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤ Node.js –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ Node.js. –í –∏—Ç–æ–≥–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≤—ã–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —á–∏—Ç–∞–µ–º–æ–≥–æ, —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–≥–æ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ –∫–æ–¥–∞ (–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç—ã–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –Ω–∞ —Ä—ã–Ω–∫–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏).\n" +
                    "\n" +
                    "–í —Ä–∞–º–∫–∞—Ö –ø—è—Ç–∏ –º–æ–¥—É–ª–µ–π –∫—É—Ä—Å–∞ –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π Node.js-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –∏–∑—É—á–∏—Ç–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ Koa –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –ø—Ä–æ—Ç–æ–∫–æ–ª OAuth –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞ —Ç–∞–∫–∂–µ –ø–æ—Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –°–£–ë–î MongoDB. –î–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π –∏ –Ω–∞–≤—ã–∫–æ–≤ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ¬´–°–ø–∏—Å–æ–∫ –¥–µ–ª¬ª. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –º–µ—Ç–æ–¥–∏–∫–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞.",
                "order": 0
            },
            {
                "courseId": "6220a96e28160b846e6f3108",
                "id": "1",
                "name": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Node.js (Part 2)",
                "description":
                    `           Node.js ‚Äì —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ —Ä—ã–Ω–∫–µ —Ç—Ä—É–¥–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –≠—Ç–æ—Ç –∫—É—Ä—Å –ø—Ä–æ–≤–µ–¥–µ—Ç –≤–∞—Å –æ—Ç –∏–∑—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤ Node.js –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ Node.js. –í –∏—Ç–æ–≥–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≤—ã–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —á–∏—Ç–∞–µ–º–æ–≥–æ, —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–≥–æ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ –∫–æ–¥–∞ (–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç—ã–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –Ω–∞ —Ä—ã–Ω–∫–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏).
                
            –í —Ä–∞–º–∫–∞—Ö –ø—è—Ç–∏ –º–æ–¥—É–ª–µ–π –∫—É—Ä—Å–∞ –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π Node.js-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –∏–∑—É—á–∏—Ç–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ Koa –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –ø—Ä–æ—Ç–æ–∫–æ–ª OAuth –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞ —Ç–∞–∫–∂–µ –ø–æ—Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –°–£–ë–î MongoDB. –î–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π –∏ –Ω–∞–≤—ã–∫–æ–≤ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ¬´–°–ø–∏—Å–æ–∫ –¥–µ–ª¬ª. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –º–µ—Ç–æ–¥–∏–∫–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞.`,
                "order": 0
            },
            {
                "courseId": "6220a96e28160b846e6f3108",
                "id": "1",
                "name": "–ü–æ–≤—Ç–æ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —è–∑—ã–∫–∞ Python",
                "description": null,
                "content": '<div id="ember2703" class="html-content rich-text-viewer ember-view" data-processed="">\x3C!----><span><h2 style="text-align: center;">–ü–æ–≤—Ç–æ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —è–∑—ã–∫–∞ Python</h2>\n\n<p>–î—Ä—É–∑—å—è, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –Ω–∞ –∫—É—Ä—Å–µ-–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ "Python –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö". –ú—ã —Å –≤–∞–º–∏ –ø—Ä–æ—à–ª–∏ –º–Ω–æ–≥–æ —Ç–µ–º&nbsp;–ø–æ –æ—Å–Ω–æ–≤–∞–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–º–∫–∞—Ö&nbsp;<a href="https://stepik.org/course/58852/syllabus" rel="noopener noreferrer nofollow">–ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫—É—Ä—Å–∞</a>,&nbsp;–∏ –º–æ–∂–Ω–æ –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–≤—Ç–æ—Ä–∏–º –∏–∑—É—á–µ–Ω–Ω–æ–µ. –í—Å–µ –ª–∏ –∑–∞–ø–æ–º–Ω–∏–ª–æ—Å—å?</p>\n\n<p>–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–¥–∞—á–∏ –Ω–∞ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–º—ã:</p>\n\n<ul>\n\t<li>–≤–≤–æ–¥-–≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö;</li>\n\t<li>—Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö;</li>\n\t<li>—É—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä;</li>\n\t<li>—Ü–∏–∫–ª—ã;</li>\n\t<li>—Å—Ç—Ä–æ–∫–∏;</li>\n\t<li>—Å–ø–∏—Å–∫–∏;</li>\n\t<li>—Ñ—É–Ω–∫—Ü–∏–∏.</li>\n</ul>\n\n<p>–ó–∞–¥–∞—á–∏ –±—É–¥—É—Ç –∏ –ø—Ä–æ—Å—Ç—ã–µ (–¥–ª—è —Ä–∞–∑–æ–≥—Ä–µ–≤–∞) –∏ —Ç–∞–∫–∏–µ, –≥–¥–µ –Ω—É–∂–Ω–æ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ –ø–æ–¥—É–º–∞—Ç—å –∏ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º. –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ä–µ—à–∏—Ç—å&nbsp;–∏—Ö –≤—Å–µ üôÇ.</p>\n\n<p>–ï—Å–ª–∏ –∫–∞–∫–∞—è-—Ç–æ –∑–∞–¥–∞—á–∞ –≤—ã–∑–æ–≤–µ—Ç —É –≤–∞—Å –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è, –Ω–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å —Å—Ä–∞–∑—É. –ü–æ–¥—É–º–∞–π—Ç–µ –µ—â–µ —Ä–∞–∑, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—É—á—à–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ ‚Äì&nbsp;—Å—Ä–µ–¥—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ª–∏—Å—Ç–æ–∫ —Å —Ä—É—á–∫–æ–π, –µ—Å–ª–∏ –Ω–∞–¥–æ –ø–æ–Ω—è—Ç—å —Ä–∞–±–æ—Ç—É –∞–ª–≥–æ—Ä–∏—Ç–º–∞. –ù—É, –∞ –µ—Å–ª–∏ —É–∂ —Å–æ–≤—Å–µ–º –Ω–∏–∫–∞–∫, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫—É –∏–ª–∏&nbsp;–≤–∫–ª–∞–¥–∫—É "—Ä–µ—à–µ–Ω–∏–µ". –ò –∫–æ–Ω–µ—á–Ω–æ, –ø–æ–º–Ω–∏—Ç–µ –ø—Ä–æ –Ω–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Ñ–æ—Ä—É–º –¥–ª—è –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞. –£–¥–∞—á–∏! –î–æ—Ä–æ–≥—É –æ—Å–∏–ª–∏—Ç –∏–¥—É—â–∏–π, –∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–≤–æ–∏—Ç —Ä–µ—à–∞—é—â–∏–π!</p>\n\n<h2 style="text-align: right;"><strong>Made with&nbsp;üíõ by&nbsp;BEEGEEK</strong></h2></span></div>',
                "order": 0
            }
        ]);
        setTasks({
            '1': [
                {
                    "moduleId": "1",
                    "expirationDate": "0001-01-01T00:00:00Z",
                    "id": "62275bd028160b846e6f3141",
                    "name": "–í–æ–ø—Ä–æ—Å –ø–æ Node.js",
                    "description": '–ú–æ–∂–µ—Ç–µ –ª–∏ –≤—ã –æ–±—ä—è—Å–Ω–∏—Ç—å —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É readFile –∏ createReadStream –≤ Node.js?',
                    "order": 0
                },
                {
                    "moduleId":
                        "1",
                    "expirationDate":
                        "0001-01-01T00:00:00Z",
                    "id":
                        "62275bd028160b846e6f3141",
                    "name":
                        "–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ (Call Stack)",
                    "description":
                        '–ß—Ç–æ —Ç–∞–∫–æ–µ —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω —á–∞—Å—Ç—å—é –¥–≤–∏–∂–∫–∞ V8?',
                    "order":
                        1
                }
            ]
        });
        setTests({
            '1': [
                {
                    "moduleId": "1",
                    "name": "React Quiz Component Demo",
                    "description": "string 1",
                    "order": 0
                },
                {
                    "moduleId":
                        "1",
                    "name":
                        "Simple Quiz",
                    "description":
                        "string 2",
                    "order":
                        1
                }
            ]
        });
        if (modules.length) {
            setOpenModule(JSON.stringify(modules[0]));
        }
    }

    return (
        <section className={cl('course-program', 'course-completion')}>
            <Sidebar
                data={
                    {
                        setState,
                        setTaskType,
                        setModule: setOpenModule,
                        setModules,
                        setTest,
                        setTask,
                        modules,
                        tasks,
                        tests,
                        announcements
                    }
                }
            />
            <div className="course-program-content">
                {
                    state === completionStates.module &&
                    <Module module={JSON.parse(module) || undefined}/>
                }
                {
                    state === completionStates.task && taskType == taskTypes.task &&
                    <Task task={JSON.parse(task) || undefined}/>
                }
                {
                    state === completionStates.task && taskType == taskTypes.test &&
                    <Test test={JSON.parse(test) || undefined}/>
                }
                {
                    state === completionStates.announcements &&
                    <Announcements announcements={announcements}/>
                }
            </div>
        </section>
    );
}

export default CourseCompletion;